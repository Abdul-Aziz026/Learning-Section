/*...Bismillahir Rahmanir Rahim...*/
#include <bits/stdc++.h>
using namespace std;

//debug..........
#ifdef Azizul
#include "debug.cpp"
#else
#define dbg(x...)
#endif

#define   int  long long
#define   ll  long long
#define   ld   long double
#define   pb   push_back
#define   vi   vector<int>
#define   bitcount(x)  (int)__builtin_popcount(x)
#define   Lsb(x)  (int)__builtin_ctzll(x)
#define   fast  ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0)
#define   sz(x)  (int)x.size()
#define   all(a) (a).begin(),(a).end()
#define   Yes  cout << "YES\n"
#define   No  cout << "NO\n"
#define   ff   first
#define   ss   second
#define   endl  "\n"
#define   pi   acos(-1.0)
#define   pii  pair<int,int>
#define   lcm(a,b) (a/__gcd(a, b)*b)

const int  mod = 998244353 ;
const int N = 200005 ;
const int inf = 2147483647;

int n, m, a[N], l[N], r[N], dp[4][N] ;

struct matrix {
    int a[3][3];
    matrix() {
        memset(a, 0, sizeof(a)) ;
    }
};
matrix unit;

int cc[3][3] = {{1,1,0},
                {1,1,1},
                {0,1,1}};
void print(matrix a) {
    for (int i=0;i<3;++i) {
        unit.a[i][i] = 1;
        for (int j=0;j<3;++j) {
            cout << a.a[i][j] << " " ;
        }
        cout << endl;
    }
}

matrix operator*(matrix a, matrix b) {
    matrix ans;
    for (int i=0;i<3;++i) {
        for (int j=0;j<3;++j) {
            for (int r=0;r<3;++r) {
                ans.a[i][j] += a.a[i][r] * b.a[r][j] ;
            }
        }
    }
    // print(a) ;
    // print(b) ;
    // printf("============\n");
    // print(ans) ;
    // cout << endl;
    //
    return ans;
}

matrix power(matrix a, int p) {
    if (p == 0) return unit;
    matrix ans = power(a, p/2);
    ans = ans * ans ;
    if (p&1) ans = ans * a;
    return ans;
}

signed main()
{
    // fast ;
    
    int p; cin >> p ;
    matrix cur;
    for (int i=0;i<3;++i) {
        unit.a[i][i] = 1;
        for (int j=0;j<3;++j) {
            cur.a[i][j] = cc[i][j] ;
        }
    }
    matrix cc = unit * cur ;
    // print(cc);
    matrix c = power(cur, p) ;
    for (int i=0;i<3;++i) {
        for (int j=0;j<3;++j) {
            cout << c.a[i][j] << " " ;
        }
        cout << endl;
    }
    return 0 ;
}
